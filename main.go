package main

import (
	"fmt"
	"log"
	"os"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/luzhnov-aleksei/kinobot/limiter"
	"github.com/luzhnov-aleksei/kinobot/movies"
)

func main() {
	botKey := os.Getenv("BOT_KEY")
	if botKey == "" {
		log.Fatal("BOT_KEY environment variable is not set")
	}

	bot, err := tgbotapi.NewBotAPI(botKey)
	if err != nil {
		log.Fatalf("Failed to authorize bot. Error: %v. This might be due to VPN issues.", err)
	}

	bot.Debug = false
	log.Printf("Authorized on account %s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	for update := range updates {
		handleUpdate(bot, update)
	}
}

// –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
func handleUpdate(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	if update.Message != nil {
		handleMessage(bot, update)
	} else if update.CallbackQuery != nil {
		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
		movies.HandleMovieSelection(bot, &update)
	}
}

// –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
func handleMessage(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	userID := update.Message.From.ID
	firstName := update.Message.From.FirstName
	username := update.Message.From.UserName

	if firstName == "" {
		firstName = "–¥—Ä—É–≥"
	}

	if username == "" {
		username = "username –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
	if update.Message.NewChatMembers != nil {
		for _, member := range update.Message.NewChatMembers {
			log.Printf("New user authorized: %s (@%s)", member.FirstName, member.UserName)
		}
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
	if !limiter.CanSendMessage(userID) {
		handleMessageLimit(bot, update.Message.Chat.ID, int(userID), username)
		return
	}

	limiter.IncrementMessageCount(userID)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start –∏ /help
	switch update.Message.Text {
	case "/start":
		handleStartCommand(bot, update, firstName)
	case "/help":
		handleHelpCommand(bot, update)
	default:
		handleMovieSearch(bot, update)
	}
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
func handleMessageLimit(bot *tgbotapi.BotAPI, chatID int64, userID int, username string) {
	log.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [%d] —Å username [@%s] –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π", userID, username)
	msg := tgbotapi.NewMessage(chatID, "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞.")
	if _, err := bot.Send(msg); err != nil {
		log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑-–∑–∞ –ª–∏–º–∏—Ç–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err)
	}
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
func handleStartCommand(bot *tgbotapi.BotAPI, update tgbotapi.Update, firstName string) {
	commonMsg := getCommonMessage()
	msgText := fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %süëãüëãüëã\n\n", firstName) + commonMsg
	sendMessage(bot, update.Message.Chat.ID, msgText)
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
func handleHelpCommand(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	commonMsg := getCommonMessage()
	sendMessage(bot, update.Message.Chat.ID, commonMsg)
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
func getCommonMessage() string {
	return "ü§ñ –≠—Ç–æ –∫–∏–Ω–æ–±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å.\n\n" +
		"‚úèÔ∏è –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –±–æ—Ç—É –∑–∞–ø—Ä–æ—Å, –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ñ–∏–ª—å–º –∏ –±–æ—Ç –≤—ã–¥–∞—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.\n\n" +
		"üîé –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∂–∞–Ω—Ä—É, –≥–æ–¥—É. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —ç—Ç–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å\n\n" +
		"üìΩÔ∏è –ë–æ—Ç –º–æ–∂–µ—Ç –∏—Å–∫–∞—Ç—å –≤—Å—ë, —á—Ç–æ –µ—Å—Ç—å –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ: —Ñ–∏–ª—å–º—ã, –º—É–ª—å—Ç—Ñ–∏–ª—å–º—ã, —Å–µ—Ä–∏–∞–ª—ã, –∞–Ω–∏–º–µ –∏ —Ç.–¥.\n\n" +
		"üìù –õ–∏—á–∫—É –±–æ—Ç–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –∑–∞–ø–∏—Å–Ω—É—é –∫–Ω–∏–≥—É —Å —Ñ–∏–ª—å–º–∞–º–∏.\n\n" +
		"üí¨ –ò–ª–∏ –¥–æ–±–∞–≤—å –±–æ—Ç–∞ –≤ –ª—é–±–æ–π —á–∞—Ç, –¥–∞–π –µ–º—É –∞–¥–º–∏–Ω–∫—É, –∏ –æ–Ω –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç—É–¥–∞ —Ñ–∏–ª—å–º—ã –ø–æ –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–∞–ºüëç\n\n" +
		"ü§î –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º, —Ç–æ –Ω–∞–ø–∏—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É @luzhnov_aleksei"
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
func handleMovieSearch(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	log.Printf("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [%d] —Å username [@%s]: %s", update.Message.From.ID, update.Message.From.UserName, update.Message.Text)
	animation := tgbotapi.NewAnimation(update.Message.Chat.ID, tgbotapi.FileURL("https://media1.tenor.com/m/RVvnVPK-6dcAAAAd/reload-cat.gif"))
	animationMsg, err := bot.Send(animation)
	if err != nil {
		log.Printf("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å GIF: %v", err)
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üîÑ –ò–¥–µ—Ç –ø–æ–∏—Å–∫... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
		if _, err := bot.Send(msg); err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è gif:", err)
		}
		movies.HandleMovieSearch(bot, &update)
		return
	}

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å —Ñ–∏–ª—å–º–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ GIF
	movies.HandleMovieSearch(bot, &update)

	// –£–¥–∞–ª—è–µ–º GIF –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
	deleteMessage := tgbotapi.NewDeleteMessage(update.Message.Chat.ID, animationMsg.MessageID)
	if _, deleteErr := bot.Request(deleteMessage); deleteErr != nil {
		log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ GIF —Å–æ–æ–±—â–µ–Ω–∏—è:", deleteErr)
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
func sendMessage(bot *tgbotapi.BotAPI, chatID int64, text string) {
	msg := tgbotapi.NewMessage(chatID, strings.TrimSpace(text))
	if _, err := bot.Send(msg); err != nil {
		log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
	}
}
